# Generated by Django 4.1.1 on 2022-11-06 13:19

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DeliveriesDB',
            fields=[
                ('sys_datetime_created', models.DateTimeField(auto_now_add=True, help_text='作成日時')),
                ('sys_datetime_modified', models.DateTimeField(auto_now=True, help_text='更新日時')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='uuid', primary_key=True, serialize=False, unique=True)),
                ('delivery_id', models.PositiveSmallIntegerField(blank=True, help_text='管理ID', null=True, verbose_name='管理ID')),
                ('delivery_no', models.PositiveSmallIntegerField(blank=True, help_text='管理番号', null=True, verbose_name='管理番号')),
                ('delivery_name', models.CharField(blank=True, help_text='お届けの目安', max_length=128, null=True, verbose_name='お届けの目安')),
                ('delivery_days', models.PositiveSmallIntegerField(blank=True, default=0, help_text='お届け日数', null=True, verbose_name='お届け日数')),
                ('delivery_memo', models.CharField(blank=True, help_text='備考', max_length=256, null=True, verbose_name='備考')),
            ],
            options={
                'verbose_name_plural': 'mst_deliveries',
                'db_table': 'mst_deliveries',
                'ordering': ['delivery_id'],
            },
        ),
        migrations.CreateModel(
            name='ExecuteLogsDB',
            fields=[
                ('sys_datetime_created', models.DateTimeField(auto_now_add=True, help_text='作成日時', verbose_name='作成日時')),
                ('sys_datetime_modified', models.DateTimeField(auto_now=True, help_text='更新日時', verbose_name='更新日時')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='uuid', primary_key=True, serialize=False, unique=True, verbose_name='UUID')),
                ('execute_datetime_start', models.DateTimeField(blank=True, help_text='実行開始日時', null=True)),
                ('execute_datetime_end', models.DateTimeField(blank=True, help_text='実行終了日時', null=True)),
                ('execute_status', models.PositiveSmallIntegerField(blank=True, choices=[(0, '未選択'), (1, '待機'), (2, '処理中'), (3, '完了'), (99, 'エラー')], default=0, help_text='処理状況', null=True, verbose_name='処理状況')),
                ('execute_type', models.PositiveSmallIntegerField(blank=True, choices=[(0, '未選択'), (1, '受注'), (2, '商品'), (3, '在庫'), (99, 'エラー')], default=0, help_text='処理タイプ', null=True, verbose_name='処理タイプ')),
                ('memo', models.CharField(blank=True, help_text='備考', max_length=256, null=True, verbose_name='備考')),
            ],
            options={
                'verbose_name_plural': 'tbl_executelogs',
                'db_table': 'tbl_executelogs',
            },
        ),
        migrations.CreateModel(
            name='IchibaItemsDB',
            fields=[
                ('sys_datetime_created', models.DateTimeField(auto_now_add=True, help_text='作成日時')),
                ('sys_datetime_modified', models.DateTimeField(auto_now=True, help_text='更新日時')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='uuid', primary_key=True, serialize=False, unique=True)),
                ('itemUrl', models.CharField(blank=True, help_text='商品Url', max_length=256, null=True, unique=True, verbose_name='商品Url')),
                ('itemCode', models.CharField(blank=True, help_text='商品コード', max_length=64, null=True, verbose_name='商品コード')),
                ('itemNumber', models.CharField(blank=True, help_text='商品番号', max_length=32, null=True, verbose_name='商品番号')),
            ],
            options={
                'verbose_name_plural': 'tmp_ichibaItems',
                'db_table': 'tmp_ichibaItems',
            },
        ),
        migrations.CreateModel(
            name='MallsDB',
            fields=[
                ('sys_datetime_created', models.DateTimeField(auto_now_add=True, help_text='作成日時')),
                ('sys_datetime_modified', models.DateTimeField(auto_now=True, help_text='更新日時')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='uuid', primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(blank=True, help_text='モール名', max_length=128, null=True)),
                ('url', models.CharField(blank=True, help_text='モールurl', max_length=256, null=True)),
            ],
            options={
                'verbose_name_plural': 'mst_malls',
                'db_table': 'mst_malls',
            },
        ),
        migrations.CreateModel(
            name='NewsDB',
            fields=[
                ('sys_datetime_created', models.DateTimeField(auto_now_add=True, help_text='作成日時')),
                ('sys_datetime_modified', models.DateTimeField(auto_now=True, help_text='更新日時')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='uuid', primary_key=True, serialize=False, unique=True)),
                ('posting_datetime', models.DateTimeField(help_text='投稿日時')),
                ('posting_user', models.CharField(blank=True, help_text='投稿者', max_length=64, null=True)),
                ('title', models.CharField(blank=True, help_text='タイトル', max_length=128, null=True)),
                ('exposition', models.CharField(blank=True, help_text='説明文', max_length=1024, null=True)),
            ],
            options={
                'verbose_name_plural': 'tbl_news',
                'db_table': 'tbl_news',
            },
        ),
        migrations.CreateModel(
            name='StoresDB',
            fields=[
                ('sys_datetime_created', models.DateTimeField(auto_now_add=True, help_text='作成日時')),
                ('sys_datetime_modified', models.DateTimeField(auto_now=True, help_text='更新日時')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='uuid', primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(blank=True, help_text='ストア名', max_length=128, null=True)),
                ('url', models.CharField(blank=True, help_text='url', max_length=256, null=True)),
                ('is_exe', models.BooleanField(choices=[(False, '停止'), (True, '連動')], default=False, help_text='連動ならTRUE')),
                ('api_No', models.CharField(blank=True, help_text='API管理番号', max_length=256, null=True)),
                ('api_ID', models.CharField(blank=True, help_text='API ID', max_length=256, null=True)),
                ('api_Key', models.CharField(blank=True, help_text='APIライセンスキー', max_length=256, null=True)),
                ('shop_Name', models.CharField(blank=True, help_text='ショップ名', max_length=128, null=True)),
                ('shop_No', models.CharField(blank=True, help_text='ショップ管理番号', max_length=128, null=True)),
                ('shop_ID', models.CharField(blank=True, help_text='ショップID', max_length=128, null=True)),
                ('shop_Password', models.CharField(blank=True, help_text='ショップパスワード', max_length=128, null=True)),
                ('user_Name', models.CharField(blank=True, help_text='ユーザ名', max_length=128, null=True)),
                ('user_No', models.CharField(blank=True, help_text='ユーザ管理番号', max_length=128, null=True)),
                ('user_ID', models.CharField(blank=True, help_text='ユーザID', max_length=128, null=True)),
                ('user_Password', models.CharField(blank=True, help_text='ユーザパスワード', max_length=128, null=True)),
                ('shop_URL', models.CharField(blank=True, help_text='ショップURL', max_length=128, null=True)),
                ('malls', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_stores_malls', to='app_folder.mallsdb')),
            ],
            options={
                'verbose_name_plural': 'mst_stores',
                'db_table': 'mst_stores',
            },
        ),
        migrations.CreateModel(
            name='ItemsDB',
            fields=[
                ('sys_datetime_created', models.DateTimeField(auto_now_add=True, help_text='作成日時')),
                ('sys_datetime_modified', models.DateTimeField(auto_now=True, help_text='更新日時')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='uuid', primary_key=True, serialize=False, unique=True)),
                ('itemUrl', models.CharField(blank=True, help_text='商品管理番号', max_length=255, null=True, verbose_name='商品管理番号')),
                ('itemNumber', models.CharField(blank=True, help_text='商品番号', max_length=32, null=True, verbose_name='商品番号')),
                ('itemName', models.CharField(blank=True, help_text='商品名', max_length=255, null=True, verbose_name='商品名')),
                ('itemPrice', models.PositiveSmallIntegerField(blank=True, help_text='販売価格', null=True, verbose_name='販売価格')),
                ('genreId', models.PositiveSmallIntegerField(blank=True, help_text='全商品ディレクトリID', null=True, verbose_name='全商品ディレクトリID')),
                ('catalogId', models.CharField(blank=True, help_text='カタログID', max_length=30, null=True, verbose_name='カタログID')),
                ('catalogIdExemptionReason', models.PositiveSmallIntegerField(blank=True, help_text='カタログIDなしの理由', null=True, verbose_name='カタログIDなしの理由')),
                ('whiteBgImageUrl', models.CharField(blank=True, help_text='白背景画像URL', max_length=255, null=True, verbose_name='白背景画像URL')),
                ('descriptionForPC', models.TextField(blank=True, help_text='PC用商品説明文', max_length=10240, null=True, verbose_name='PC用商品説明文')),
                ('descriptionForSmartPhone', models.TextField(blank=True, help_text='スマートフォン用商品説明文', max_length=10240, null=True, verbose_name='スマートフォン用商品説明文')),
                ('movieUrl', models.CharField(blank=True, help_text='動画URL', max_length=2048, null=True, verbose_name='動画URL')),
                ('catchCopyForPC', models.CharField(blank=True, help_text='PC用キャッチコピー', max_length=174, null=True, verbose_name='PC用キャッチコピー')),
                ('catchCopyForMobile', models.CharField(blank=True, help_text='モバイル用キャッチコピー', max_length=60, null=True, verbose_name='モバイル用キャッチコピー')),
                ('descriptionBySalesMethod', models.TextField(blank=True, help_text='PC用販売説明文', max_length=10240, null=True, verbose_name='PC用販売説明文')),
                ('isSaleButton', models.BooleanField(help_text='注文ボタン', null=True, verbose_name='注文ボタン')),
                ('isDocumentButton', models.BooleanField(help_text='資料請求ボタン', null=True, verbose_name='資料請求ボタン')),
                ('isInquiryButton', models.BooleanField(help_text='商品問い合わせボタン', null=True, verbose_name='商品問い合わせボタン')),
                ('isStockNoticeButton', models.BooleanField(help_text='再入荷のお知らせボタン', null=True, verbose_name='再入荷のお知らせボタン')),
                ('displayMakerContents', models.BooleanField(help_text='メーカー提供コンテンツ表示', null=True, verbose_name='メーカー提供コンテンツ表示')),
                ('itemLayout', models.PositiveSmallIntegerField(blank=True, help_text='商品情報レイアウト', null=True, verbose_name='商品情報レイアウト')),
                ('isIncludedTax', models.BooleanField(help_text='消費税', null=True, verbose_name='消費税')),
                ('isIncludedPostage', models.BooleanField(help_text='送料', null=True, verbose_name='送料')),
                ('isIncludedCashOnDeliveryPostage', models.BooleanField(help_text='代引き手数料', null=True, verbose_name='代引き手数料')),
                ('displayPrice', models.PositiveSmallIntegerField(blank=True, help_text='表示価格', null=True, verbose_name='表示価格')),
                ('orderLimit', models.PositiveSmallIntegerField(blank=True, help_text='注文受付数', null=True, verbose_name='注文受付数')),
                ('postage', models.PositiveSmallIntegerField(blank=True, help_text='個別送料', null=True, verbose_name='個別送料')),
                ('isNoshiEnable', models.BooleanField(help_text='のし対応', null=True, verbose_name='のし対応')),
                ('isTimeSale', models.BooleanField(help_text='期間限定販売フラグ', null=True, verbose_name='期間限定販売フラグ')),
                ('timeSaleStartDateTime', models.DateTimeField(blank=True, help_text='期間限定販売開始日', null=True, verbose_name='期間限定販売開始日')),
                ('timeSaleEndDateTime', models.DateTimeField(blank=True, help_text='期間限定販売終了日', null=True, verbose_name='期間限定販売終了日')),
                ('isUnavailableForSearch', models.BooleanField(help_text='サーチ非表示', null=True, verbose_name='サーチ非表示')),
                ('isDepot', models.BooleanField(help_text='倉庫指定', null=True, verbose_name='倉庫指定')),
                ('detailSellType', models.PositiveSmallIntegerField(blank=True, help_text='詳細販売種別', null=True, verbose_name='詳細販売種別')),
                ('asurakuDeliveryId', models.CharField(blank=True, help_text='あす楽配送管理番号', max_length=10, null=True, verbose_name='あす楽配送管理番号')),
                ('deliverySetId', models.PositiveSmallIntegerField(blank=True, help_text='配送方法セット管理番号', null=True, verbose_name='配送方法セット管理番号')),
                ('sizeChartLinkCode', models.CharField(blank=True, help_text='サイズ表リンクコード', max_length=5, null=True, verbose_name='サイズ表リンクコード')),
                ('reviewDisp', models.PositiveSmallIntegerField(blank=True, help_text='レビュー表示', null=True, verbose_name='レビュー表示')),
                ('displayPriceId', models.PositiveSmallIntegerField(blank=True, help_text='二重価格文言ID', null=True, verbose_name='二重価格文言ID')),
                ('itemWeight', models.PositiveSmallIntegerField(blank=True, help_text='表示優先度', null=True, verbose_name='表示優先度')),
                ('layoutCommonId', models.PositiveSmallIntegerField(blank=True, help_text='ヘッダー・フッター・レフトナビのテンプレートID', null=True, verbose_name='ヘッダー・フッター・レフトナビのテンプレートID')),
                ('layoutMapId', models.PositiveSmallIntegerField(blank=True, help_text='表示項目の並び順のテンプレートID', null=True, verbose_name='表示項目の並び順のテンプレートID')),
                ('textSmallId', models.PositiveSmallIntegerField(blank=True, help_text='共通説明文（小）のテンプレートID', null=True, verbose_name='共通説明文（小）のテンプレートID')),
                ('lossLeaderId', models.PositiveSmallIntegerField(blank=True, help_text='目玉商品のテンプレートID', null=True, verbose_name='目玉商品のテンプレートID')),
                ('textLargeId', models.PositiveSmallIntegerField(blank=True, help_text='共通説明文（大）のテンプレートID', null=True, verbose_name='共通説明文（大）のテンプレートID')),
                ('isSingleItemShipping', models.BooleanField(help_text='単品配送設定', null=True, verbose_name='単品配送設定')),
                ('ichibaItems', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='related_items_ichibaItems', to='app_folder.ichibaitemsdb', verbose_name='楽天市場商品API')),
            ],
            options={
                'verbose_name_plural': 'tmp_items',
                'db_table': 'tmp_items',
            },
        ),
        migrations.CreateModel(
            name='InventoriesDB',
            fields=[
                ('sys_datetime_created', models.DateTimeField(auto_now_add=True, help_text='作成日時')),
                ('sys_datetime_modified', models.DateTimeField(auto_now=True, help_text='更新日時')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='uuid', primary_key=True, serialize=False, unique=True)),
                ('itemID', models.CharField(blank=True, help_text='商品管理ID', max_length=256, null=True, verbose_name='商品管理ID')),
                ('itemUrl', models.CharField(blank=True, help_text='商品管理URL', max_length=256, null=True, verbose_name='商品管理URL')),
                ('itemNumber', models.CharField(blank=True, help_text='商品管理番号', max_length=256, null=True, verbose_name='商品管理番号')),
                ('inventoryType', models.PositiveSmallIntegerField(blank=True, help_text='在庫タイプ', null=True, verbose_name='在庫タイプ')),
                ('sku', models.CharField(blank=True, help_text='sku', max_length=256, null=True, verbose_name='sku')),
                ('skuNo', models.CharField(blank=True, help_text='sku管理番号', max_length=256, null=True, verbose_name='sku管理番号')),
                ('janCode', models.CharField(blank=True, help_text='JANコード', max_length=32, null=True, verbose_name='JANコード')),
                ('horizontalName', models.CharField(blank=True, help_text='横軸管理名', max_length=128, null=True, verbose_name='横軸管理名')),
                ('verticalName', models.CharField(blank=True, help_text='縦軸管理名', max_length=128, null=True, verbose_name='縦軸管理名')),
                ('horizontalCode', models.CharField(blank=True, help_text='横軸管理コード', max_length=128, null=True, verbose_name='横軸管理コード')),
                ('verticalCode', models.CharField(blank=True, help_text='縦軸管理コード', max_length=128, null=True, verbose_name='縦軸管理コード')),
                ('normalDeliveryId', models.PositiveSmallIntegerField(blank=True, help_text='通常納期ID', null=True, verbose_name='通常納期ID')),
                ('lackDeliveryId', models.PositiveSmallIntegerField(blank=True, help_text='在庫切れ時納期ID', null=True, verbose_name='在庫切れ時納期ID')),
                ('inventoryCount', models.PositiveSmallIntegerField(blank=True, default=0, help_text='在庫数', null=True, verbose_name='在庫数')),
                ('deliveries', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='related_inventories_deliveries', to='app_folder.deliveriesdb', verbose_name='DeliveriesUUID_通常納期ID')),
                ('executelogs', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='related_inventories_executelogs', to='app_folder.executelogsdb', verbose_name='実行ログID')),
                ('ichibaItems', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='related_inventories_ichibaItems', to='app_folder.ichibaitemsdb', verbose_name='楽天市場商品API')),
            ],
            options={
                'verbose_name_plural': 'tmp_inventories',
                'db_table': 'tmp_inventories',
            },
        ),
        migrations.CreateModel(
            name='IchibaItemsLogsDB',
            fields=[
                ('sys_datetime_created', models.DateTimeField(auto_now_add=True, help_text='作成日時')),
                ('sys_datetime_modified', models.DateTimeField(auto_now=True, help_text='更新日時')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='uuid', primary_key=True, serialize=False, unique=True)),
                ('affiliateRate', models.PositiveSmallIntegerField(blank=True, help_text='affiliateRate', null=True, verbose_name='affiliateRate')),
                ('affiliateUrl', models.CharField(blank=True, help_text='affiliateUrl', max_length=256, null=True, verbose_name='affiliateUrl')),
                ('asurakuArea', models.TextField(blank=True, help_text='asurakuArea', max_length=512, null=True, verbose_name='asurakuArea')),
                ('asurakuClosingTime', models.CharField(blank=True, help_text='asurakuClosingTime', max_length=8, null=True, verbose_name='asurakuClosingTime')),
                ('asurakuFlag', models.PositiveSmallIntegerField(blank=True, help_text='asurakuFlag', null=True, verbose_name='asurakuFlag')),
                ('availability', models.PositiveSmallIntegerField(blank=True, help_text='availability', null=True, verbose_name='availability')),
                ('catchcopy', models.TextField(blank=True, help_text='catchcopy', max_length=256, null=True, verbose_name='catchcopy')),
                ('creditCardFlag', models.PositiveSmallIntegerField(blank=True, help_text='creditCardFlag', null=True, verbose_name='creditCardFlag')),
                ('endTime', models.CharField(blank=True, help_text='endTime', max_length=32, null=True, verbose_name='endTime')),
                ('genreId', models.CharField(blank=True, help_text='genreId', max_length=8, null=True, verbose_name='genreId')),
                ('giftFlag', models.PositiveSmallIntegerField(blank=True, help_text='giftFlag', null=True, verbose_name='giftFlag')),
                ('imageFlag', models.PositiveSmallIntegerField(blank=True, help_text='imageFlag', null=True, verbose_name='imageFlag')),
                ('itemCaption', models.TextField(blank=True, help_text='itemCaption', max_length=4056, null=True, verbose_name='itemCaption')),
                ('itemCode', models.CharField(blank=True, help_text='itemCode', max_length=64, null=True, verbose_name='itemCode')),
                ('itemName', models.CharField(blank=True, help_text='itemName', max_length=256, null=True, verbose_name='itemName')),
                ('itemPrice', models.PositiveSmallIntegerField(blank=True, help_text='itemPrice', null=True, verbose_name='itemPrice')),
                ('itemUrl', models.CharField(blank=True, help_text='itemUrl', max_length=128, null=True, verbose_name='itemUrl')),
                ('mediumImageUrls', models.TextField(blank=True, help_text='mediumImageUrls', max_length=1024, null=True, verbose_name='mediumImageUrls')),
                ('pointRate', models.PositiveSmallIntegerField(blank=True, help_text='pointRate', null=True, verbose_name='pointRate')),
                ('pointRateEndTime', models.CharField(blank=True, help_text='pointRateEndTime', max_length=32, null=True, verbose_name='pointRateEndTime')),
                ('pointRateStartTime', models.CharField(blank=True, help_text='pointRateStartTime', max_length=32, null=True, verbose_name='pointRateStartTime')),
                ('postageFlag', models.PositiveSmallIntegerField(blank=True, help_text='postageFlag', null=True, verbose_name='postageFlag')),
                ('reviewAverage', models.FloatField(blank=True, help_text='reviewAverage', null=True, verbose_name='reviewAverage')),
                ('reviewCount', models.PositiveSmallIntegerField(blank=True, help_text='reviewCount', null=True, verbose_name='reviewCount')),
                ('shipOverseasArea', models.TextField(blank=True, help_text='shipOverseasArea', max_length=256, null=True, verbose_name='shipOverseasArea')),
                ('shipOverseasFlag', models.PositiveSmallIntegerField(blank=True, help_text='shipOverseasFlag', null=True, verbose_name='shipOverseasFlag')),
                ('shopAffiliateUrl', models.CharField(blank=True, help_text='shopAffiliateUrl', max_length=128, null=True, verbose_name='shopAffiliateUrl')),
                ('shopCode', models.CharField(blank=True, help_text='shopCode', max_length=32, null=True, verbose_name='shopCode')),
                ('shopName', models.CharField(blank=True, help_text='shopName', max_length=64, null=True, verbose_name='shopName')),
                ('shopOfTheYearFlag', models.PositiveSmallIntegerField(blank=True, help_text='shopOfTheYearFlag', null=True, verbose_name='shopOfTheYearFlag')),
                ('shopUrl', models.CharField(blank=True, help_text='shopUrl', max_length=128, null=True, verbose_name='shopUrl')),
                ('smallImageUrls', models.TextField(blank=True, help_text='smallImageUrls', max_length=512, null=True, verbose_name='smallImageUrls')),
                ('startTime', models.CharField(blank=True, help_text='startTime', max_length=32, null=True, verbose_name='startTime')),
                ('tagIds', models.TextField(blank=True, help_text='tagIds', max_length=512, null=True, verbose_name='tagIds')),
                ('taxFlag', models.PositiveSmallIntegerField(blank=True, help_text='taxFlag', null=True, verbose_name='taxFlag')),
                ('carrier', models.PositiveSmallIntegerField(blank=True, help_text='carrier', null=True, verbose_name='carrier')),
                ('count', models.PositiveSmallIntegerField(blank=True, help_text='count', null=True, verbose_name='count')),
                ('first', models.PositiveSmallIntegerField(blank=True, help_text='first', null=True, verbose_name='first')),
                ('hits', models.PositiveSmallIntegerField(blank=True, help_text='hits', null=True, verbose_name='hits')),
                ('last', models.PositiveSmallIntegerField(blank=True, help_text='last', null=True, verbose_name='last')),
                ('page', models.PositiveSmallIntegerField(blank=True, help_text='page', null=True, verbose_name='page')),
                ('pageCount', models.PositiveSmallIntegerField(blank=True, help_text='pageCount', null=True, verbose_name='pageCount')),
                ('sort', models.PositiveSmallIntegerField(blank=True, help_text='sort', null=True, verbose_name='sort')),
                ('executelogs', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='related_ichibaItems_logs_executelogs', to='app_folder.executelogsdb', verbose_name='実行ログID')),
                ('ichibaItems', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='related_ichibaItems_logs_ichibaItems', to='app_folder.ichibaitemsdb', verbose_name='楽天市場商品ID')),
            ],
            options={
                'verbose_name_plural': 'tbl_ichibaItems_logs',
                'db_table': 'tbl_ichibaItems_logs',
            },
        ),
        migrations.AddField(
            model_name='ichibaitemsdb',
            name='stores',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='related_ichibaItems_stores', to='app_folder.storesdb', verbose_name='ストアID'),
        ),
        migrations.AddField(
            model_name='executelogsdb',
            name='stores',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='related_executelogs_stores', to='app_folder.storesdb', verbose_name='ストアID'),
        ),
        migrations.AddField(
            model_name='executelogsdb',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='related_executelogs_user', to=settings.AUTH_USER_MODEL, verbose_name='実行者'),
        ),
        migrations.AddField(
            model_name='deliveriesdb',
            name='stores',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='related_deliveries_stores', to='app_folder.storesdb', verbose_name='ストアID'),
        ),
        migrations.AddConstraint(
            model_name='deliveriesdb',
            constraint=models.UniqueConstraint(fields=('stores', 'delivery_id'), name='unique_delivery'),
        ),
    ]
